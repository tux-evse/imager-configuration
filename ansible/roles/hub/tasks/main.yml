- name: Change hostname for Hub to "{{ hostvars[inventory_hostname].fqdn }}"
  hostname:
    name: "{{ hostvars[inventory_hostname].fqdn }}"

- name: Configure hostname in NetworkManager for interface ens18 (seems to always be this name but has to be sure...)
  shell:
    cmd: nmcli con modify ens18 ipv4.dhcp-hostname "{{ hostvars[inventory_hostname].fqdn }}" && systemctl restart NetworkManager

- name: Inform dns of the hostname change
  shell:
    cmd: dhclient -r && dhclient -H "{{ hostvars[inventory_hostname].fqdn }}"

- name: Install required bundles for Koji-hub
  dnf:
    name: "{{ hub_packages }}"
    state: present
  become: true
  tags:
    - dnf_install

- name: Deploy Koji hub server
  command:
    ./deploy-koji.sh
  become: true
  args:
    chdir: "{{ koji_setup_dir }}"
    creates: /hub_deployed
  tags:
    - deploy_koji

- name: Get the Hub stack number
  set_fact:
    stack_n: "{{ inventory_hostname | regex_replace('.*([0-9])$', '\\1') }}"

- name: Generate builders certificates for this Hub
  loop: "{{ groups['builders'] | default([]) }}"
  when:  item | regex_search('.*'+stack_n+'[0-9]$')
  command:
      "./add-koji-builder.sh --arches '{{ kojid_rpm_arches }}' --fqdn {{ hostvars[item].fqdn }}"
  become: true
  args:
    chdir: "{{ koji_setup_dir }}"
  environment:
    KOJI_SLAVE_FQDN: "{{ hostvars[item].fqdn }}"

- name: Find certificates
  find:
    paths: "{{ koji_pki_dir }}"
    recurse: yes
    patterns: '*.pem,koji_ca_cert.crt'
  register: certs

- name: Retrieve certificates
  fetch:
    dest: "vm_certs"
    src: "{{ item.path }}"
  loop: "{{ certs.files }}"
  tags:
    - fetch_certs

- name: Generate local builder cert
  command:
      "./gencert.sh --user local_builder"
  become: true
  args:
    chdir: "{{ koji_pki_dir }}"
    creates: "{{ local_builder_certs_archive }}"
  tags:
    - gen_local_builder_certs

- name: Retrieve local builder cert archive
  fetch:
    dest: "vm_certs"
    src: "{{ local_builder_certs_archive}}"
  tags:
    - gen_local_builder_certs

- name: Install cron jobs to be used by keepalived later
  blockinfile:
    path: /etc/crontab
    block: "{{lookup('file', 'koji-directory-cleanup')}}"
    create: yes
    state: present

- name: Restart Kojihub Web Server.
  systemd:
    state: restarted
    daemon_reload: yes
    name: httpd
